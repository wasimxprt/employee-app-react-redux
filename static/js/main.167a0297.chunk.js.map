{"version":3,"sources":["components/layout/Navbar.js","store/actions/employeeActions.js","store/contants/actionTypes.js","components/employee/AddEmployee.js","components/employee/Employee.js","components/employee/EmployeeList.js","components/layout/Footer.js","components/employee/SearchResult.js","components/employee/SearchEmployee.js","components/employee/EmployeeDetails.js","App.js","serviceWorker.js","store/reducers/employeeReducer.js","store/reducers/rootReducer.js","index.js"],"names":["Navbar","props","className","to","onClick","signOut","employee","type","payload","employeeId","AddEmployee","history","useHistory","dispatch","useDispatch","useState","fname","lname","designation","hireDate","skills","values","setValues","Date","changeHandler","event","target","id","value","useEffect","elems","document","querySelectorAll","Materialize","Datepicker","init","defaultDate","format","container","onSelect","date","autoClose","maxDate","onSubmit","e","preventDefault","inputValues","getElementById","employeeActions","push","action","htmlFor","autoFocus","name","onChange","Employee","isSearchResult","title","href","EmployeeList","employeeList","useSelector","state","employees","length","data-field","map","key","Footer","SearchResult","SearchEmployee","searchStr","setSearchStr","searchResult","setSearchResult","filtered","filter","toLowerCase","includes","EmployeeDetails","match","params","src","width","height","App","exact","path","component","Boolean","window","location","hostname","initialState","employeeReducer","obj","Math","random","toString","slice","newEmployees","rootReducer","combineReducers","middleware","thunk","store","createStore","compose","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.167a0297.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link,NavLink } from \"react-router-dom\"\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Navbar(props) {\r\n\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo left\">Employee Management System</Link>\r\n                <ul className=\"right\">\r\n                    <li><NavLink to=\"/create\">Add Employee</NavLink></li>\r\n                    <li><NavLink to=\"/search\">Search</NavLink></li>\r\n                    <li><a onClick={props.signOut}>Logout</a></li>\r\n                    <li><NavLink to=\"/\" className=\"btn btn-floating pink loghten-1\">WS</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import * as actions from \"../contants/actionTypes\";\r\n\r\nconst setEmployees = (employees) => {\r\n    return {\r\n        type: actions.SET_EMPLOYEES,\r\n        payload: employees\r\n    }\r\n}\r\n\r\nconst addEmployee = (employee) => {\r\n    \r\n    return {\r\n        type: actions.ADD_EMPLOYEE,\r\n        payload: employee\r\n    }\r\n}\r\n\r\nconst getEmployees = () => {\r\n    return {\r\n        type: actions.GET_EMPLOYEES\r\n    }\r\n}\r\n\r\nconst deleteEmployee = (employeeId) => {\r\n    \r\n    return {\r\n        type: actions.DELETE_EMPLOYEE,\r\n        payload: employeeId\r\n    }\r\n}\r\n\r\nexport default {\r\n    setEmployees,\r\n    getEmployees,\r\n    addEmployee,\r\n    deleteEmployee\r\n}","export const SET_EMPLOYEES = \"SET_EMPLOYEES\";\r\nexport const GET_EMPLOYEES = \"GET_EMPLOYEES\";\r\nexport const ADD_EMPLOYEE = \"ADD_EMPLOYEE\";\r\nexport const DELETE_EMPLOYEE = \"DELETE_EMPLOYEE\";\r\n","import React, { useEffect, useState } from 'react';\r\nimport employeeActions from \"../../store/actions/employeeActions\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Materialize from \"materialize-css\";\r\n\r\n\r\nfunction AddEmployee(props) {\r\n\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [values, setValues] = useState({\r\n        fname: \"\",\r\n        lname: \"\",\r\n        designation: \"\",\r\n        hireDate: \"\",\r\n        skills: \"\"\r\n    });\r\n\r\n    const [dateVal, setDateVal] = useState(new Date())\r\n\r\n    const changeHandler = (event) => {\r\n        setValues({\r\n            ...values,\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let inputValues = {\r\n            ...values,\r\n            hireDate: document.getElementById(\"hireDate\").value\r\n        }\r\n        dispatch(employeeActions.addEmployee(inputValues));\r\n        history.push(\"/\");\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        var context = this;\r\n        var elems = document.querySelectorAll(\".dateset\");\r\n        Materialize.Datepicker.init(elems, {\r\n            defaultDate: new Date(),\r\n            format: \"dd-mm-yyyy\",\r\n            container: \"body\",\r\n            onSelect: function (date) {\r\n            },\r\n            autoClose: true,\r\n            maxDate: new Date()\r\n        });\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={submitHandler} action=\"\" className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Add Employee</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">First Name</label>\r\n                    <input type=\"text\" autoFocus className=\"fname\" id=\"fname\" name=\"fname\" value={values.fname} onChange={changeHandler} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Last Name</label>\r\n                    <input type=\"text\" className=\"lname\" id=\"lname\" name=\"lname\" value={values.lname} onChange={changeHandler} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Designation</label>\r\n                    <input type=\"text\" className=\"designation\" id=\"designation\" name=\"designation\" value={values.designation} onChange={changeHandler} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Hiring Date</label>\r\n                    <input\r\n                        id=\"hireDate\"\r\n                        name=\"hireDate\"\r\n                        type=\"text\"\r\n                        className=\"datepicker dateset hireDate\"\r\n                    />\r\n                    {/* <input type=\"text\" id=\"hireDate\" className=\"datepicker dateset\" name=\"hireDate\" value={values.hireDate} onChange={changeHandler} /> */}\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"content\">Skills Ex: C,C++</label>\r\n                    <textarea name=\"skills\" id=\"skills\" className=\"materialize-textarea\" onChange={changeHandler}></textarea>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink waves-effect waves-light\" type=\"submit\" name=\"action\">Submit<i className=\"material-icons right\">send</i></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddEmployee;","import React from 'react';\r\nimport employeeActions from \"../../store/actions/employeeActions\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, NavLink } from \"react-router-dom\"\r\n\r\nfunction Employee({ employee, isSearchResult }) {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td>{employee.fname}</td>\r\n                <td>{employee.lname}</td>\r\n                <td>{employee.designation}</td>\r\n                <td>{employee.hireDate}</td>\r\n                <td>{employee.skills}</td>\r\n                {!isSearchResult &&\r\n                    <td>\r\n                        <a title=\"Delete\" onClick={() => dispatch(employeeActions.deleteEmployee(employee.id))}><i className=\"material-icons\">delete</i></a>\r\n                        <a title=\"Edit\" href=\"\"><i className=\"material-icons\">edit</i></a>\r\n                        <NavLink to={`profile/${employee.id}`} ><i className=\"material-icons\">pageview</i></NavLink>\r\n                    </td>\r\n                }\r\n\r\n            </tr>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Employee;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Employee from './Employee';\r\n\r\nfunction EmployeeList(props) {\r\n\r\n    const employeeList = useSelector(state => state.employee.employees);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form className=\"white\">\r\n                {employeeList && employeeList.length > 0 ?\r\n                    <table className=\"highlight responsive-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th data-field=\"fname\">First Name</th>\r\n                                <th data-field=\"lname\">Last Name</th>\r\n                                <th data-field=\"designation\">Designation</th>\r\n                                <th data-field=\"hireDate\">Hire Date</th>\r\n                                <th data-field=\"skills\">Skills</th>\r\n                                <th data-field=\"actions\">Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {employeeList.map((employee)=>(\r\n                                <Employee key={employee.id} employee={employee} />\r\n                            ))}\r\n                        </tbody>\r\n                    </table> : <h5 className=\"center\">No data found</h5>}\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmployeeList;","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <footer className=\"page-footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col l6 s12\">\r\n                        <h5 className=\"white-text\">Footer Content</h5>\r\n                        <p className=\"grey-text text-lighten-4\">Is this website helpful to you? Please give us a like, or share your feedback. Connect with us on Facebook and Twitter for the latest updates.</p>\r\n                    </div>\r\n                    <div className=\"col l4 offset-l2 s12\">\r\n                        <h5 className=\"white-text\">Links</h5>\r\n                        <ul>\r\n                            <li><a className=\"grey-text text-lighten-3\" href=\"#!\">About Us</a></li>\r\n                            <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Contact Us</a></li>\r\n                            <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Terms of Use</a></li>\r\n                            <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Privacy Policy</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer-copyright\">\r\n                <div className=\"container\">\r\n                    © 2020 XYZ. All Rights Reserved.\r\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">More Links</a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Employee from './Employee';\r\n\r\nfunction SearchResult({ employeeList, isSearchResult }) {\r\n    return (\r\n\r\n        <div className=\"white\">\r\n            {employeeList && employeeList.length > 0 ?\r\n                <table className=\"highlight\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th data-field=\"fname\">First Name</th>\r\n                            <th data-field=\"lname\">Last Name</th>\r\n                            <th data-field=\"designation\">Designation</th>\r\n                            <th data-field=\"hireDate\">Hire Date</th>\r\n                            <th data-field=\"skills\">Skills</th>\r\n                            {!isSearchResult && <th data-field=\"actions\">Actions</th>}\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {employeeList.map((employee) => (\r\n                            <Employee isSearchResult={isSearchResult} key={employee.id} employee={employee} />\r\n                        ))}\r\n                    </tbody>\r\n                </table> : <h5 className=\"center\">No data found</h5>}\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default SearchResult;","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport SearchResult from './SearchResult';\r\n\r\nfunction SearchEmployee(props) {\r\n\r\n    const employeeList = useSelector(state => state.employee.employees);\r\n\r\n    const [searchStr, setSearchStr] = useState(\"\");\r\n    const [searchResult, setSearchResult] = useState([]);\r\n\r\n    const changeHandler = (event) => {\r\n        setSearchStr(event.target.value)\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let filtered = employeeList.filter(employee => {\r\n            if (employee.skills.toLowerCase().includes(searchStr.toLowerCase())) {\r\n                return true;\r\n            }\r\n        })\r\n        setSearchResult(filtered)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={submitHandler} action=\"\" className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Search Employee</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Enter skill</label>\r\n                    <input type=\"text\" className=\"searchStr\" autoFocus id=\"searchStr\" name=\"searchStr\" value={searchStr} onChange={changeHandler} />\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink waves-effect waves-light\" type=\"submit\" name=\"action\">Search<i className=\"material-icons right\">send</i></button>\r\n\r\n                </div>\r\n                {searchResult && searchResult.length ? <SearchResult employeeList={searchResult} isSearchResult={true} /> : null}\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchEmployee;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router'\r\n\r\nfunction EmployeeDetails({ match }) {\r\n\r\n    const employeeId = match.params.id;\r\n    const employeeList = useSelector(state => state.employee.employees);\r\n    let employee = employeeList.filter((employee) => employee.id == employeeId);\r\n\r\n    if (employee.length === 0) {\r\n        return <Redirect to='/' />\r\n    }\r\n    employee = employee[0];\r\n\r\n    return (\r\n        <div className=\"container about\">\r\n            <h5>About Me</h5>\r\n            <hr />\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col s12 m4 l4\">\r\n\r\n                    <div className=\"card blue-grey darken-1\">\r\n                        <div className=\"card-content white-text\">\r\n                            <img src=\"http://labs.qnimate.com/portfolio-materialize/images/profile.png\" width=\"64\" height=\"64\" />\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore.</p>\r\n                        </div>\r\n                        <div className=\"card-action\">\r\n                            <a href=\"#\">Link</a>\r\n                            <a href='#'>Link</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col s12 m8 l8\">\r\n\r\n                    <ul className=\"collapsible\">\r\n                        <li className=\"active\">\r\n                            <div className=\"collapsible-header\">First Name: {employee.fname}</div>\r\n                        </li>\r\n                        <li className=\"active\">\r\n                            <div className=\"collapsible-header\">Last Name: {employee.lname}</div>\r\n                        </li>\r\n\r\n                        <li className=\"active\">\r\n                            <div className=\"collapsible-header\">Designation: {employee.designation}</div>\r\n                        </li>\r\n                        <li className=\"active\">\r\n                            <div className=\"collapsible-header\">Hire Date: {employee.hireDate}</div>\r\n                        </li>\r\n                        <li className=\"active\">\r\n                            <div className=\"collapsible-header\">Skills: {employee.skills}</div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmployeeDetails;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from './components/layout/Navbar';\nimport AddEmployee from './components/employee/AddEmployee';\nimport EmployeeList from './components/employee/EmployeeList';\nimport Footer from './components/layout/Footer';\nimport SearchEmployee from './components/employee/SearchEmployee';\nimport EmployeeDetails from './components/employee/EmployeeDetails';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n        <Route exact path='/' component={EmployeeList}></Route>\n          <Route path='/employee/:id' component={Navbar}></Route>\n          <Route path='/profile/:id' component={EmployeeDetails}></Route>\n          <Route path='/create' component={AddEmployee}></Route>\n          <Route path='/search' component={SearchEmployee}></Route>\n        </Switch>\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    employees: [\r\n        { id: \"aed3\", fname: 'Wasim', lname: 'Sayyed', designation: 'Service Delivery Engineer', hireDate: '02-02-2018', skills: 'HTML,CSS,JavaScript,Angular,React,Redux' },\r\n        { id: \"sde2\", fname: 'John', lname: 'Doe', designation: 'Senior Software Engineer', hireDate: '02-10-2020', skills: 'Java EE,Springboot,Kubernetes' }\r\n    ]\r\n}\r\n\r\nconst employeeReducer = (state = initialState, action) => {\r\n\r\n    let employees = state.employees;\r\n\r\n    switch (action.type) {\r\n        case \"SET_EMPLOYEES\":\r\n            return {\r\n                ...state,\r\n                employees: action.payload\r\n            }\r\n        case \"ADD_EMPLOYEE\":\r\n\r\n            let obj = { id: Math.random().toString(16).slice(-4) };\r\n            let employee = { ...action.payload, ...obj };\r\n            employees.push(employee);\r\n\r\n            return {\r\n                ...state,\r\n                employees: employees\r\n            }\r\n\r\n        case \"DELETE_EMPLOYEE\":\r\n            let newEmployees = employees.filter(employee => employee.id != action.payload);\r\n            return {\r\n                ...state,\r\n                employees: newEmployees\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default employeeReducer;","import employeeReducer from './employeeReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    employee: employeeReducer\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer'\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer,\n  compose(\n    composeWithDevTools(applyMiddleware(...middleware))\n  )\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}